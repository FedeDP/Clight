sensor:
{
    ## Curves used to match ambient brightness to backlight level for each AC state.
    ## X axis: ambient brightness values (from 0 to 10)
    ## Y axis: desired backlight level for corresponding ambient brightness.
    ## Note: the array can be expanded up to 50 points for finer granularity.
    # ac_regression_points = [ 0.0, 0.15, 0.29, 0.45, 0.61, 0.74, 0.81, 0.88, 0.93, 0.97, 1.0 ];
    # batt_regression_points = [ 0.0, 0.15, 0.23, 0.36, 0.52, 0.59, 0.65, 0.71, 0.75, 0.78, 0.80 ];

    ## Sensor device to be used (Webcam or ALS device, eg: video0 or iio:device0).
    ## Leave this empty to let clight use first device it finds between supported ones,
    ## ie: webcams, ambient light sensors, or custom devices.
    ## Refer to Clightd wiki for more info: https://github.com/FedeDP/Clightd/wiki/Sensors
    # devname = "";

    ## Sensor settings to be used. Leave empty/commented to use default values.
    ## This can be really useful to further customize your sensor behaviour (together with backlight_regression_points).
    ## Have a look at Clightd wiki for more info: https://github.com/FedeDP/Clightd/wiki/Sensors#settings-string.
    ## Example for Camera sensor, to set a manual exposure -> "10094849=1,10094850=166";
    # settings = "";

    ## Number of frames or ALS device pollings to be captured on AC/on BATT.
    ## Must be between 1 and 20.
    # captures = [ 5, 5 ];
};

## Curves used to match reference backlight level (computed through sensor.regression_points curves),
## to backlight level for each AC state for specific monitors.
## This allows per-monitor backlight adjustment; it means eg:
## that a 0.7 backlight level for your internal laptop monitor,
## can be mapped to 0.8 backlight level for your external monitor.
## It is mostly useful for people with internal laptop + external monitors or multiple external monitors,
## as often their backlight level will not properly match (ie: a 50% level on internal laptop can be much brighter than external monitor).
## All monitors not specified below will use default reference values (specified by sensor.regression_points curves).
## X axis: default backlight level (from 0 to 10)
## Y axis: desired backlight level adjusted for specific monitor.
## Note: arrays can be expanded up to 50 points for finer granularity.
## Customize "intel_backlight" or "acpi_video0" or whatever using your monitors IDs.
## To find monitor IDs, use Clightd:
## busctl call org.clightd.clightd /org/clightd/clightd/Backlight org.clightd.clightd.Backlight GetAll "s" ""
##
## You might ask why using a backlight-to-backlight mapping for specific monitors, instead of using
## multiple ambient_brightness-to-backlight mapping curves; fact is that this way Clight is also able to 
## set correct backlight for each monitor even when just asked to set the backlight, ie:
## when the request comes from eg: dbus API asking for a certain backlight level (IncBl, DecBl dbus methods).
## In this case, we wouldn't have an "ambient brightess" to be used to compute correct backlight level on each monitor;
## instead, we just set the requested backlight as default, and adjust to it for each monitor specified here below.
monitor_override:
(
    {
        # monitor_id = "intel_backlight"
        # ac_regression_points = [ 0.0, 0.18, 0.22, 0.33, 0.55, 0.64, 0.71, 0.80, 0.90, 0.97, 1.0 ];
        # batt_regression_points =  [ 0.0, 0.15, 0.29, 0.45, 0.61, 0.74, 0.81, 0.88, 0.93, 0.97, 1.0 ];
    },
    {
        # monitor_id = "acpi_video0"
        # ac_regression_points = [ 0.0, 0.18, 0.22, 0.33, 0.55, 0.64, 0.71, 0.80, 0.90, 0.97, 1.0 ];
        # batt_regression_points =  [ 0.0, 0.15, 0.29, 0.45, 0.61, 0.74, 0.81, 0.88, 0.93, 0.97, 1.0 ];
    }
);
